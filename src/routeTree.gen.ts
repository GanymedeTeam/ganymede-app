/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppOldVersionRouteImport } from './routes/app-old-version'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppSettingsRouteImport } from './routes/_app/settings'
import { Route as AppAutoPilotRouteImport } from './routes/_app/auto-pilot'
import { Route as AppNotesIndexRouteImport } from './routes/_app/notes.index'
import { Route as AppGuidesIndexRouteImport } from './routes/_app/guides/index'
import { Route as AppDownloadsIndexRouteImport } from './routes/_app/downloads/index'
import { Route as AppNotesCreateRouteImport } from './routes/_app/notes.create'
import { Route as AppGuidesIdRouteImport } from './routes/_app/guides/$id'
import { Route as AppDownloadsStatusRouteImport } from './routes/_app/downloads/$status'
import { Route as AppDofusdbMapRouteImport } from './routes/_app/dofusdb/map'
import { Route as AppDofusdbHuntRouteImport } from './routes/_app/dofusdb/hunt'

const AppOldVersionRoute = AppOldVersionRouteImport.update({
  id: '/app-old-version',
  path: '/app-old-version',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppAutoPilotRoute = AppAutoPilotRouteImport.update({
  id: '/auto-pilot',
  path: '/auto-pilot',
  getParentRoute: () => AppRoute,
} as any)
const AppNotesIndexRoute = AppNotesIndexRouteImport.update({
  id: '/notes/',
  path: '/notes/',
  getParentRoute: () => AppRoute,
} as any)
const AppGuidesIndexRoute = AppGuidesIndexRouteImport.update({
  id: '/guides/',
  path: '/guides/',
  getParentRoute: () => AppRoute,
} as any)
const AppDownloadsIndexRoute = AppDownloadsIndexRouteImport.update({
  id: '/downloads/',
  path: '/downloads/',
  getParentRoute: () => AppRoute,
} as any)
const AppNotesCreateRoute = AppNotesCreateRouteImport.update({
  id: '/notes/create',
  path: '/notes/create',
  getParentRoute: () => AppRoute,
} as any)
const AppGuidesIdRoute = AppGuidesIdRouteImport.update({
  id: '/guides/$id',
  path: '/guides/$id',
  getParentRoute: () => AppRoute,
} as any)
const AppDownloadsStatusRoute = AppDownloadsStatusRouteImport.update({
  id: '/downloads/$status',
  path: '/downloads/$status',
  getParentRoute: () => AppRoute,
} as any)
const AppDofusdbMapRoute = AppDofusdbMapRouteImport.update({
  id: '/dofusdb/map',
  path: '/dofusdb/map',
  getParentRoute: () => AppRoute,
} as any)
const AppDofusdbHuntRoute = AppDofusdbHuntRouteImport.update({
  id: '/dofusdb/hunt',
  path: '/dofusdb/hunt',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/app-old-version': typeof AppOldVersionRoute
  '/auto-pilot': typeof AppAutoPilotRoute
  '/settings': typeof AppSettingsRoute
  '/': typeof AppIndexRoute
  '/dofusdb/hunt': typeof AppDofusdbHuntRoute
  '/dofusdb/map': typeof AppDofusdbMapRoute
  '/downloads/$status': typeof AppDownloadsStatusRoute
  '/guides/$id': typeof AppGuidesIdRoute
  '/notes/create': typeof AppNotesCreateRoute
  '/downloads': typeof AppDownloadsIndexRoute
  '/guides': typeof AppGuidesIndexRoute
  '/notes': typeof AppNotesIndexRoute
}
export interface FileRoutesByTo {
  '/app-old-version': typeof AppOldVersionRoute
  '/auto-pilot': typeof AppAutoPilotRoute
  '/settings': typeof AppSettingsRoute
  '/': typeof AppIndexRoute
  '/dofusdb/hunt': typeof AppDofusdbHuntRoute
  '/dofusdb/map': typeof AppDofusdbMapRoute
  '/downloads/$status': typeof AppDownloadsStatusRoute
  '/guides/$id': typeof AppGuidesIdRoute
  '/notes/create': typeof AppNotesCreateRoute
  '/downloads': typeof AppDownloadsIndexRoute
  '/guides': typeof AppGuidesIndexRoute
  '/notes': typeof AppNotesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/app-old-version': typeof AppOldVersionRoute
  '/_app/auto-pilot': typeof AppAutoPilotRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/dofusdb/hunt': typeof AppDofusdbHuntRoute
  '/_app/dofusdb/map': typeof AppDofusdbMapRoute
  '/_app/downloads/$status': typeof AppDownloadsStatusRoute
  '/_app/guides/$id': typeof AppGuidesIdRoute
  '/_app/notes/create': typeof AppNotesCreateRoute
  '/_app/downloads/': typeof AppDownloadsIndexRoute
  '/_app/guides/': typeof AppGuidesIndexRoute
  '/_app/notes/': typeof AppNotesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/app-old-version'
    | '/auto-pilot'
    | '/settings'
    | '/'
    | '/dofusdb/hunt'
    | '/dofusdb/map'
    | '/downloads/$status'
    | '/guides/$id'
    | '/notes/create'
    | '/downloads'
    | '/guides'
    | '/notes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/app-old-version'
    | '/auto-pilot'
    | '/settings'
    | '/'
    | '/dofusdb/hunt'
    | '/dofusdb/map'
    | '/downloads/$status'
    | '/guides/$id'
    | '/notes/create'
    | '/downloads'
    | '/guides'
    | '/notes'
  id:
    | '__root__'
    | '/_app'
    | '/app-old-version'
    | '/_app/auto-pilot'
    | '/_app/settings'
    | '/_app/'
    | '/_app/dofusdb/hunt'
    | '/_app/dofusdb/map'
    | '/_app/downloads/$status'
    | '/_app/guides/$id'
    | '/_app/notes/create'
    | '/_app/downloads/'
    | '/_app/guides/'
    | '/_app/notes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AppOldVersionRoute: typeof AppOldVersionRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app-old-version': {
      id: '/app-old-version'
      path: '/app-old-version'
      fullPath: '/app-old-version'
      preLoaderRoute: typeof AppOldVersionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/auto-pilot': {
      id: '/_app/auto-pilot'
      path: '/auto-pilot'
      fullPath: '/auto-pilot'
      preLoaderRoute: typeof AppAutoPilotRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/notes/': {
      id: '/_app/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof AppNotesIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/guides/': {
      id: '/_app/guides/'
      path: '/guides'
      fullPath: '/guides'
      preLoaderRoute: typeof AppGuidesIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/downloads/': {
      id: '/_app/downloads/'
      path: '/downloads'
      fullPath: '/downloads'
      preLoaderRoute: typeof AppDownloadsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/notes/create': {
      id: '/_app/notes/create'
      path: '/notes/create'
      fullPath: '/notes/create'
      preLoaderRoute: typeof AppNotesCreateRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/guides/$id': {
      id: '/_app/guides/$id'
      path: '/guides/$id'
      fullPath: '/guides/$id'
      preLoaderRoute: typeof AppGuidesIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/downloads/$status': {
      id: '/_app/downloads/$status'
      path: '/downloads/$status'
      fullPath: '/downloads/$status'
      preLoaderRoute: typeof AppDownloadsStatusRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/dofusdb/map': {
      id: '/_app/dofusdb/map'
      path: '/dofusdb/map'
      fullPath: '/dofusdb/map'
      preLoaderRoute: typeof AppDofusdbMapRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/dofusdb/hunt': {
      id: '/_app/dofusdb/hunt'
      path: '/dofusdb/hunt'
      fullPath: '/dofusdb/hunt'
      preLoaderRoute: typeof AppDofusdbHuntRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppAutoPilotRoute: typeof AppAutoPilotRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppDofusdbHuntRoute: typeof AppDofusdbHuntRoute
  AppDofusdbMapRoute: typeof AppDofusdbMapRoute
  AppDownloadsStatusRoute: typeof AppDownloadsStatusRoute
  AppGuidesIdRoute: typeof AppGuidesIdRoute
  AppNotesCreateRoute: typeof AppNotesCreateRoute
  AppDownloadsIndexRoute: typeof AppDownloadsIndexRoute
  AppGuidesIndexRoute: typeof AppGuidesIndexRoute
  AppNotesIndexRoute: typeof AppNotesIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAutoPilotRoute: AppAutoPilotRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
  AppDofusdbHuntRoute: AppDofusdbHuntRoute,
  AppDofusdbMapRoute: AppDofusdbMapRoute,
  AppDownloadsStatusRoute: AppDownloadsStatusRoute,
  AppGuidesIdRoute: AppGuidesIdRoute,
  AppNotesCreateRoute: AppNotesCreateRoute,
  AppDownloadsIndexRoute: AppDownloadsIndexRoute,
  AppGuidesIndexRoute: AppGuidesIndexRoute,
  AppNotesIndexRoute: AppNotesIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AppOldVersionRoute: AppOldVersionRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
